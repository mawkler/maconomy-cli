# Set these
@company = <your_company_name>
@company = <your_base_url>

###

# Get instances (to get concurrency control and container instance ID needed for next request)
POST {{base_url}}/containers/{{company}}/timeregistration/instances
Authorization: X-Cookie {{cookie_name}}
Content-Type: application/vnd.deltek.maconomy.containers+json
Cookie: {{cookie_name}}={{cookie_value}}

{ "panes": { "card": { "fields": [ "periodstartvar", "periodendvar", "employeenamevar", "datevar", "weeknumbervar", "fixednumberday1var", "fixednumberday2var", "fixednumberday3var", "fixednumberday4var", "fixednumberday5var", "fixednumberday6var", "fixednumberday7var", "totalnumberday1var", "totalnumberday2var", "totalnumberday3var", "totalnumberday4var", "totalnumberday5var", "totalnumberday6var", "totalnumberday7var", "regulartimeday1var", "regulartimeday2var", "regulartimeday3var", "regulartimeday4var", "regulartimeday5var", "regulartimeday6var", "regulartimeday7var" ] }, "table": { "fields": [ "jobnumber", "numberday1", "numberday2", "numberday3", "numberday4", "numberday5", "numberday6", "numberday7", "entrytext", "taskname", "timeregistrationunit", "jobnamevar", "tasktextvar" ] } } }

# @lang=lua
> {%
  local function capture_header(variable_name, header_name)
    local header_values = response.headers[header_name]
    if header_values ~= nil then
      client.global.set(variable_name, header_values[1])
    end
  end

  capture_header('concurrency_control', 'maconomy-concurrency-control')

  local container_instance_id = vim.json.decode(response.body).meta.containerInstanceId
  client.global.set('container_instance_id', container_instance_id)
%}

###

# Get all table rows (requires `request.hooks.encode_url = false` in rest.nvim to not have the `;` incorrectly encoded)
POST {{base_url}}/containers/{{company}}/timeregistration/instances/{{container_instance_id}}/data;any
Authorization: X-Cookie {{cookie_name}}
Maconomy-Concurrency-Control: {{concurrency_control}}
Content-length: 0
Cookie: {{cookie_name}}={{cookie_value}}

# @lang=lua
> {%
  local function capture_header(variable_name, header_name)
    local header_values = response.headers[header_name]
    if header_values ~= nil then
      client.global.set(variable_name, header_values[1])
    end
  end

  capture_header('concurrency_control', 'maconomy-concurrency-control')
%}

###

@row = 0

# Set data
POST {{base_url}}/containers/{{company}}/timeregistration/instances/{{container_instance_id}}/data/panes/table/{{row}}
Authorization: X-Cookie {{cookie_name}}
Maconomy-Concurrency-Control: {{concurrency_control}}
Content-Type: application/vnd.deltek.maconomy.containers+json
Cookie: {{cookie_name}}={{cookie_value}}

{"data": {"numberday2": 0.0}}


# @lang=lua
> {%
  local function capture_header(variable_name, header_name)
    local header_values = response.headers[header_name]
    if header_values ~= nil then
      client.global.set(variable_name, header_values[1])
    end
  end

  capture_header('concurrency_control', 'maconomy-concurrency-control')
%}

###

# Change week (not sure what the 0 does)
POST {{base_url}}/containers/{{company}}/timeregistration/instances/{{container_instance_id}}/data/panes/card/0
Authorization: X-Cookie {{cookie_name}}
Maconomy-Concurrency-Control: {{concurrency_control}}
Content-Type: application/vnd.deltek.maconomy.containers+json
Cookie: {{cookie_name}}={{cookie_value}}

{"data": {"datevar": "2024-10-07"}}

# @lang=lua
> {%
  local function capture_header(variable_name, header_name)
    local header_values = response.headers[header_name]
    if header_values ~= nil then
      client.global.set(variable_name, header_values[1])
    end
  end

  capture_header('concurrency_control', 'maconomy-concurrency-control')
%}

###

# Add time sheet line (does not need to update concurrency control, does not seem to be required before doing request below)
POST {{base_url}}/containers/{{company}}/timeregistration/instances/{{container_instance_id}}/data/panes/table/inits?row=end
Authorization: X-Cookie {{cookie_name}}
Cookie: {{cookie_name}}={{cookie_value}}
Maconomy-Concurrency-Control: {{concurrency_control}}
Content-Length: 0
Accept: application/vnd.deltek.maconomy.containers+json; version=5.0

###

@job_name=<job name here>

# Get job number from job name
POST {{base_url}}/containers/{{company}}/timeregistration/search/table;foreignkey=notblockedjobnumber_jobheader
Authorization: X-Cookie {{cookie_name}}
Cookie: {{cookie_name}}={{cookie_value}}
Accept: application/vnd.deltek.maconomy.containers+json; version=5.0
Content-type: application/vnd.deltek.maconomy.containers+json; version=5.0

{
  "restriction": "(customernumber like '*{{job_name}}*' or jobnumber like '*{{job_name}}*' or jobname like '*{{job_name}}*' or name1 like '*{{job_name}}*')",
  "fields": [
    "jobnumber"
  ]
}

# @lang=lua
> {%
  local job_number = vim.json.decode(response.body).panes.filter.records[1].data.jobnumber
  client.global.set('job_number', job_number)
%}

###

@job_number = <job number>

# Get list of tasks
POST {{base_url}}/containers/{{company}}/timeregistration/search/table;foreignkey=taskname_tasklistline
Authorization: X-Cookie {{cookie_name}}
Cookie: {{cookie_name}}={{cookie_value}}
Accept: application/vnd.deltek.maconomy.containers+json; version=5.0
Content-type: application/vnd.deltek.maconomy.containers+json; version=5.0

{
  "data": {
    "jobnumber": {{job_number}}
  },
  "fields": ["taskname", "description"]
}

###

@job_number=<job number>
@task_name=<task name>

# Set new job and task on last row
POST {{base_url}}/containers/{{company}}/timeregistration/instances/{{container_instance_id}}/data/panes/table/?row=end
Authorization: X-Cookie {{cookie_name}}
Cookie: {{cookie_name}}={{cookie_value}}
Maconomy-Concurrency-Control: {{concurrency_control}}
Accept: application/vnd.deltek.maconomy.containers+json; version=5.0
Content-type: application/vnd.deltek.maconomy.containers+json; version=5.0

{
  "data": {
    "jobnumber": "{{job_number}}",
    "taskname": "{{task_name}}"
  }
}

# @lang=lua
> {%
  local function capture_header(variable_name, header_name)
    local header_values = response.headers[header_name]
    if header_values ~= nil then
      client.global.set(variable_name, header_values[1])
    end
  end

  capture_header('concurrency_control', 'maconomy-concurrency-control')
%}

###

@line_number=0

# Delete line
DELETE {{base_url}}/containers/{{company}}/timeregistration/instances/{{container_instance_id}}/data/panes/table/{{line_number}}
Authorization: X-Cookie {{cookie_name}}
Cookie: {{cookie_name}}={{cookie_value}}
Maconomy-Concurrency-Control: {{concurrency_control}}
Accept: application/vnd.deltek.maconomy.containers+json; version=5.0

# @lang=lua
> {%
  local function capture_header(variable_name, header_name)
    local header_values = response.headers[header_name]
    if header_values ~= nil then
      client.global.set(variable_name, header_values[1])
    end
  end

  capture_header('concurrency_control', 'maconomy-concurrency-control')
%}
